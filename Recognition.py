{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of Rows: 7352\n",
      "Number of Columns: 11\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import warnings\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "import joblib\n",
    "import tkinter as tk\n",
    "from tkinter import filedialog, messagebox\n",
    "\n",
    "# Suppress warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "# 1. Importing the Dataset\n",
    "data = pd.read_excel(r\"C:\\Users\\ashit\\Desktop\\Project\\Original Train.xlsx\")\n",
    "data_test = pd.read_excel(r\"C:\\Users\\ashit\\Desktop\\Project\\Original Test.xlsx\")\n",
    "\n",
    "# 2. Display Top 5 Rows of The Dataset\n",
    "data.head()\n",
    "\n",
    "# 3. Check Last 5 Rows of The Dataset\n",
    "data.tail()\n",
    "\n",
    "# 4. Find Shape of Our Dataset (Number of Rows And Number of Columns)\n",
    "data_shape = data.shape\n",
    "print(\"Number of Rows:\", data_shape[0])\n",
    "print(\"Number of Columns:\", data_shape[1])\n",
    "\n",
    "# 5. Taking Care of Duplicate Values\n",
    "duplicated_columns = data.columns[data.T.duplicated()].tolist()\n",
    "len_duplicated_columns = len(duplicated_columns)\n",
    "\n",
    "# 6. Taking Care of Missing Values\n",
    "missing_values = data.isnull().sum()\n",
    "\n",
    "# Visualize Activity distribution\n",
    "activity_counts = data['Activity'].value_counts()\n",
    "activity_counts.plot(kind='bar')\n",
    "plt.xticks(rotation=35)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# 7. Store Feature Matrix In X and Response(Target) In Vector y\n",
    "X = data.drop('Activity', axis=1)\n",
    "y = data['Activity']\n",
    "\n",
    "le = LabelEncoder()\n",
    "y_encoded = le.fit_transform(y)\n",
    "\n",
    "# 8. Splitting The Dataset Into The Training Set And Test Set\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.20, random_state=42)\n",
    "\n",
    "# 9. Logistic Regression\n",
    "log = LogisticRegression()\n",
    "log.fit(X_train, y_train)\n",
    "y_pred1 = log.predict(X_test)\n",
    "accuracy_lr = accuracy_score(y_test, y_pred1)\n",
    "\n",
    "# 10. Random Forest Classifier\n",
    "rf = RandomForestClassifier()\n",
    "rf.fit(X_train, y_train)\n",
    "y_pred2 = rf.predict(X_test)\n",
    "accuracy_rf = accuracy_score(y_test, y_pred2)\n",
    "\n",
    "# Save Random Forest Classifier model\n",
    "joblib.dump(rf, \"model_rf.pkl\")\n",
    "\n",
    "# Define GUI functions\n",
    "def open_file():\n",
    "    filepath = filedialog.askopenfilename(filetypes=[(\"Excel Files\", \"*.xlsx\")])\n",
    "    if filepath:\n",
    "        try:\n",
    "            data = pd.read_excel(filepath)\n",
    "            process_data(data)\n",
    "        except Exception as e:\n",
    "            messagebox.showerror(\"Error\", f\"Failed to open file: {e}\")\n",
    "\n",
    "def process_data(data):\n",
    "    duplicated_columns = data.columns[data.T.duplicated()].tolist()\n",
    "    data_test = data.drop(duplicated_columns, axis=1)\n",
    "\n",
    "    model = joblib.load(\"model_rf.pkl\")\n",
    "    y_pred = model.predict(data_test)\n",
    "    y_pred = le.inverse_transform(y_pred)\n",
    "    data['Predicted_Activity'] = y_pred\n",
    "    save_file(data)\n",
    "\n",
    "def save_file(data):\n",
    "    savepath = filedialog.asksaveasfilename(defaultextension=\".xlsx\", filetypes=[(\"Excel Files\", \"*.xlsx\")])\n",
    "    if savepath:\n",
    "        try:\n",
    "            data.to_excel(savepath, index=False)\n",
    "            messagebox.showinfo(\"Success\", \"File Saved Successfully\")\n",
    "        except Exception as e:\n",
    "            messagebox.showerror(\"Error\", f\"Failed to save file: {e}\")\n",
    "\n",
    "# Create a Tkinter GUI\n",
    "root = tk.Tk()\n",
    "root.title(\"Classification\")\n",
    "root.geometry(\"200x200\")\n",
    "\n",
    "button1 = tk.Button(root, text=\"Open Excel File\", width=15, height=2,\n",
    "                    background=\"lightgreen\", activebackground=\"lightblue\",\n",
    "                    font=(\"Arial\", 11, \"bold\"), command=open_file)\n",
    "button1.pack(pady=50)\n",
    "\n",
    "root.mainloop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
